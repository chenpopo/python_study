１、回顾

2、数据库连接
    导入pymongo 依赖包

    建立数据库连接
    conn = pymongo.MongoClient("localhost", 27017)

    生成要操作的数据库对象
    db = conn.db

    生成要操作的集合对象
    myset = db.class0
    myset = db["class0"]

    通过集合对象调用聚合函数

3、数据操作
    参数书对应关系

    pymongo         mongodb
    字典{"a":1}       文档{a:1}
    列表[1,2,3]       数组[1,2,3]
    True/False        true/false
    None              null

    增加: insert_one()        insertOne
          insert_many()      insertMany
          insert()           insert
          save()             save

    查找：find()查找所有复合条件的文档
         find_one()查找第一个符合条件文档

         find(query, field)
         返回值：　返回一个游标对象
         通过遍历游标对象(字典)可以显示所有内容

         find_one(query, field)
         返回值：一个字典

         *所有操作符的使用，需要用引号单做字符串传入
         find({"name":{"$gt":"康熙"}}, {"_id":0})

         skip(n)  跳过n条记录
         limit(n) 选择n条记录
         sort([("King",1)])  根据某域进行排序

    更新:
        update_one({})
        update_many()
        update({}, {}, multi=True)

    删除：
        delete()
        delete_one()
        delete_many()
        remove()

    复合函数：
        find_one_and_delete()
        find_one_and_update()

    索引：
        create_index() 创建一个索引
            create_index([("King", 1)], name="King", sparse=True)
            在King域上创建正向索引，索引名称为King, 稀疏索引，当文档没有King信息时则针对此文档不创建索引
        ensure_index()
        create_indexes() 创建多个索引
        list_indexes()  查询所有索引

        drop_index("King")
        drop_index(["name", -1])
        drop_indexes()  删除所有索引

    聚合操作：

