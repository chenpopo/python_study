1、字典 - dict
	1、什么是字典
		1、字典是一种可变的容器，可以存储任意类型的数据
		2、字典中的每一个数据都是用"key"来进行索引的，而不像列表和元组中可以使用整数下标来进行索引
		3、字典中的数据是没有先后顺序的，字典是无序的
		4、字典中数据以键(key):值(value
		)对的方式进行存储的
		5、字典的键不能重复，且只能使用不可变的数据作为字典的键
	2、语法
		1、使用字典的字面值创建字典
			使用{}来表示一个字典，里面允许出现若干键值对
			1、创建空字典
						dic = {}
			2、创建非空字典
				dic = {"name":"纳木错", "age":18}
				dic = {1:"one", 2:"two"}
				dic = {"asia":["中国","韩国","伊朗","日本"], "ouzhou":["德国", "英国", "法国"]}
		2、使用字典的构造函数来创建字典
			1、dic = dict()  #创建一个空字典
			2、使用可迭代对象初始化一个字典
				dict(iterable)
				dic = dict([("name", "alpha"), ("age", "15"), ["address", "bj"]]) -> {'age': '15', 'name': 'alpha', 'address': 'bj'}
			3、使用关键字传参形式创建一个字典
				dict(**kwargs)
				dic = (name="alpha", age="123")  => dic = {"name":"alpha", "age":"123"}
		3、字典的键必须是不可变的类型
			bool, int, float, complex, str, tuple, frozenset, bytes
		4、字典的值可以是任意类型数据
		5、可变的数据类型
			1、list - 列表
			2、dict - 字典
			3、set - 集合
			4、
	3、字典的基本操作
		1、字典的键索引
			使用[]配合着字典的键得到对应的值，也可以修改键值索引
			字典[键]
		2、示例：
			dic = {"name":"naruto", "age":18}
			print(dic["name"], "的年龄是 ", dic["age"])
		3、添加、修改 字典的元素
			语法：
				字典[键] = 值
			说明：
				当键不存在时，创建键并绑定值
				当键存在时，则是修改键所绑定的值
		4、删除 字典的元素
			del 字典[键]
	
	4、字典的成员运算符 - in / not in
		可以用 in运算符来判断一个键是否存在于字典中
		如果”键“存在则返回True, 否则返回False
		not in 与 in 结果相反
		示例：
			dic = {
				"name":"alpha",
				"age" : 15
			}
			
			if "name" in dic:
				print(dic["name"])   - True
			
			print(15 in dic)  -> False  值判断键，不判断值
		练习：
			1、将如下的数据形成一个字典 - seasons
				键      值
				1				”第一季度：1,2,3月“
				2				”第二季度：4,5,6月“
				3				”第三季度: 7,8,9月“
				4				”第四季度: 10,11,12月“
			2、让用户输入一个整数表示一个季度值，打印季度对应的信息，如果用户输入的季度不在字典内，则输出”信息不存在“
	5、字典的迭代访问
		1、基本迭代
			语法：
				for 变量 in 字典：
					#迭代变量表示的是迭代出来的字典的键
					pass
		2、通过 字典.keys()可以得到所有的键组成的列表  for key in dic.keys()
		3、通过 字典.values()可以得到所有的值组成的列表 for value in dic.values()
		4、通过 字典.items() 可以得到所有的键值对所组成的列表 for key, value in dic.items()
		5、迭代字典中所有的键
			for key in dic:
				#key 表示的就是dic中的每一个键，效果等同于 2 
	6、可以用于字典的内建函数
		len(dic): 返回字典中键值对的个数
		max(dic): 返回字典中键的最大值
		min(dic): 返回字典中键的最小值
		sum(dic): 返回字典的所有的键的和
		any(dic): 真值测试，任意一个键位True,则结果为True
		all(dic): 真值测试，所有的键都为True,则结果位True


	7、字典使用列表推导表达式
		L = ["tarena", "CHINA", "python"]
		#推导表达式
		d = {s: len(s) for s in L}
	8、字典 VS 列表
		1、字典 和 列表都是可变对象 - 相同点
		2、索引方式不同，列表使用数字做索引，字典使用键做索引 -  不同点
		3、字典的插入，删除，修改操作的速度要快于列表 - 不同点
			字典中数据的可读性更高，适合大量更新操作； 列表数据可读性不高，适合遍历性操作
		4、列表的存储是有序的，字典的存储是无序的

