1、字符串的常用函数
	1、center()
	2、startswith()
	3、enndwith()
	... ...
	通过helo()查看某数据类型所提供的方法
		>>> help(str)查看官方api

2、字符串的格式化表达式
	1、作用
		生成一定格式的字符串
		ex:
			sname = input("请输入您的姓名")
			sage = int(input("请输入您的年龄"))
			#请将sname和sage拼成一个字符串在进行输出
			#字符串格式 ： Hellp，我的名字是 xxx, 今年xxx岁
			s = "Hello，我的名字是"+sname+"，今年"+sage+"岁"  会出错  sage是数字无法和字符串进行拼接
			print(s)
	2、语法格式
		格式字符串 % 参数值
		格式字符串 % （参数值1， 参数值2）
		
		说明：
			格式化字符串中允许包括以 % 作为开头的占位符
			占位符的位置将需要使用参数值进行替换
		示例：
			sname = input("请输入您的姓名")
			sage = int(input("请输入您的年龄"))
			#字符串格式 ： Hellp，我的名字是 xxx, 今年xxx岁
			s = "Hello，我的名字是%s，今年%d岁" % (sname, sage)
			print("Hello, 我的名字是%s,我今年%d岁" % (sname, sage))
			
	3、占位符的格式
		占位符是由 “%类型码” 组成的
		类型码表示的是不同类型的占位，如： s,d,f ... ...
		%s 字符串，非字符串则使用str(obj)转换成字符串
		%r 字符串，字符串则使用repr(obj) 转换为字符串
		%c 证书类型转换为字符串，使用char(i)函数
		%d 十进制整数
		%o 八进制整数,后面的数字会转换成八进制数字输出
		%x 十六进制整数(字符 a -f),后面的数字会转换成十六进制数字输出
		%X 十六进制整数(字符 A - F),后面的数字会转换成十六进制数字输出
		%e 指数型浮点数(e小写) 如 2.5e10
		%E 指数型浮点数(E大写) 如 2.5E10
		%f,%F 浮点十进制形式
		%g, %G 进制形式浮点和指数形式浮点自动换算
		%% 等同于 % 的原样输出
		
	4、%和类型码之间的格式语法
		语法： %[-+0宽度.精度]类型码
			- 左对齐（默认是右对齐）
			+ 显示正号的效果
			0 左侧空白位置补0
			宽度： 整个数据输出的宽度
			精度：保留小数点后多少位， 默认6位(3.123457
			"%.2f" % 3.12345678 -> 3.12带四舍五入)
			
		示例：
			“%10d” % 23 表示输出数字，占10位  -> "        23"
			"%+10d" % 23 ->"       +23"
			"%-10d" % 123 -> "123       "
			"%05d" % 23 -> "00023"
			"%f " % 3.12345678 -> 3.123457
			"%.2f" % 3.12345678 -> 3.12

3、循环结构
	1、什么是循环
		根据条件反复的执行一段代码结构
	2、循环结构特点
		1、循环条件
		2、循环操作
	3、python中的循环
		1、while结构
		2、for结构
	4、while结构
		1、作用
			根据一定条件，反复的执行一条或多条语句
		2、语法
			while 条件:
				语句块1
			else:
				语句块2
			
			说明：
				1、条件： 判断条件的值是True还是False
				2、如果条件位True， 则执行语句块1的内容
					执行完后，回到条件的判断位置处继续判断
				3、如果条件位False， 则执行else中的语句块2的内容
					执行完毕后结束整个循环
					注意：else 是可以省略不写的，根据具体业务场景决定。如果没有else的话，判断条件位False的时候则直接结束循环

		3、注意事项
			1、要控制循环的条件值来防止“死循环”
			2、要通过循环的条件来控制循环的执行次数
		4、while结构的嵌套
			在一个while循环当中又出现了一个while循环
			语法：
				while 条件1：
					... ...
					while 条件2：
						... ...
					else:
						... ...
				else:
					... ...
			示例：
				打印1-10之间的整数在一行上，共打印10行
				
		5、循环当中的流程控制
			1、作用
				控制循环的走向， 如：提前结束循环... ...
			2、break
				1、用于循环语句中，用来终止当前循环结构的执行
				2、示例：
					循环遍历 1- 100之间所有的数字，病打印输出，但是遇到第一个技能被3整除，又能被5整除的数字则停止循环
					在终端循环输入一个字符串并打印输出，知道输入 exit 为止
				3、说明：
					1、当break语句被执行后，此循环结构中break以后的内容都不会再执行
					2、break通常都会配合着if语句一起使用
					3、break语句终止循环后，循环结构中的else结构也不会被执行
					4、break只能终止当前循环结构的执行，如果有循环嵌套时不会跳出外层的循环
					5、break只能在循环结构中使用(while, for)
			3、continue
				1、作用
					用在循环结构中(while, for), 不在执行本次循环内的后续语句，重新开始下一次循环
				2、示例
					打印 1-100之间的数字，遇到3的倍数则跳过





















				
