闭包 closeure
	闭包是值引用了此函数外部嵌套函数作用域内的变量的函数
	闭包必须满足三个条件：
		必须有一个内嵌函数
		内嵌函数必须引用外部函数中的变量
		外部函数的返回值必须是内嵌函数
		
	思考：
		全局变量
			一直可用，只有调用 del语句才能销毁
			谁都可以访问（取值）且可以在函数内部通过global语句来进行修改
		局部变量
			只有在函数调用过程中存在，只有函数调用结束局部变量可能会自动销毁（只有在此保存才不会销毁）
			只能在函数内部访问
			
	示例：
		见例子 closure1.py
		
	闭包的特点：
		闭包中外部嵌套函数中的变量不会在函数调用后立即销毁，而是被内嵌函数引用
	使用闭包的注意事项：
		由于闭包会是的函数中的变量都被保留在内存中，内存消耗比较大，所以不能滥用闭包。
		

	闭包能做说明事情示例：
		见 closure2.py	
		
	
	示例详解：
		def make_closure():
			x = 100
			y = 200
			def fx():
				z = x + y
				return z
			return fx
		
		fun = make_slcosure()  #fun绑定一个闭包函数 fx
		del fun #当闭包函数fx被释放时，所引用的变量 x,y才会被释放
	
	
装饰器 decorators（专业提高篇）
	装饰器是一个函数， 主要作用是用来包装另一个函数或类（后面才讲）
	
	作用：
		在不修改被装饰函数的源代码，不改变被装饰的函数的调用方式的情况下添加或改变原函数的功能，类似before_filter前置过滤或后置过滤after_filter, 或者sqdl中的前置触发后置触发
	函数装饰器的语法：
		def 装饰器函数名(fn):
			语句块
			return 函数对象
		
		
		@装饰器函数名<换行>
		def 被装饰函数名(形参列表):
			语句块
		
	示例见：
		mydeco1.py
		mydeco3.py


函数的文档字符串
	函数内第一次位赋值给任何变量的字符串是函数的文档字符串
	
	语法：
		def 函数名(参数列表):
			'这是函数的文档字符串'
			pass
			
		>>> help(myfunc)
		
	
函数的__doc__属性
	myfunc.__doc__


函数定义语句(def 语句)的完整语法：
	
	[@装饰器名1]
	[@装饰器名2]
	...
	def 函数名([位置形参], [*元组形参], [命名关键字形参], [**字典形参]):
		'''文档字符串'''
		pass



模块 Module
	什么是模块？
		模块是一个包含一系列数据，函数，类等组成的程序组
		模块是一个文件，模块文件名通常以py结尾
		
		作用：
			让一些相关的数据，函数，类等有逻辑的组织在一起，是逻辑结构更加清晰
			模块中的数据，函数和类等可提供给其他模块或程序使用
		分类：
			内置模块，在解析器的内部可以直接使用（通常用C语言编写的）
			标准库模块，安装python时已经安装并可以直接使用
			第三方模块（通常为开源），需要自己安装
				下载安装命令：
					pip3 install tensorflow
			用户自己编写的模块（也可以作为其他人的第三方模块）



模块的导入 import语句
import语句
	语法：
		import 模块名1[as 模块新名1]， 模块名2[as 模块新名2]
	作用：
		将某模块整体导入到当前模块中
	用法：
		模块名.属性名
	示例：
		import math
		print(math.factorial(5))
		
	dir(obj)函数返回模块接的所有属性的字符串列表
	help(obj)函数可以查看模块相关的文档字符串	


from import 语句
	语法：
		from 模块名 import 模块属性名1 [as 属性新名1], 模块属性名2 [as 属性新名2] ... ...
	
	作用：
		将某模块内的一个或多个属性导入到当前模块的作用域
	示例：
		from math import factorial as fac
		from math import sin, cos
		from math import pi
		
		print(sin(pi/2))
		

from import * 语句
	语法：
		from 模块名 import *
	作用：
		将某模块的所有属性导入到当前模块
	示例：
		from math import *

dir函数
	dir([obj])  返回一个字符串列表
	
	作用：
		如果没有参数调用，则返回当前作用域内的所有变量的列表
		如果给定一个对象作为参数，则返回这个对象的所有变量的列表
			对于一个模块，返回这个模块的全部变量
			对于一个类对象，返回类对象的所有变量，并递归其类对象的所有变量
			对于其他对象返回所有变量，类变量和基类变量

常见內建模块
	数学模块 math
		文档 python_base_docs_html/数学模块math.html
	
	时间模块 time
		文档 python_base_docs_html/时间模块math.html

练习：
	1、写一个程序，输入你的出生日期
		1）计算处你已经出生多少天了
		2）算出你出生的那天是星期几
	2、写一个程序，以电子时钟方式打印时间
		显示格式：
			 HH:MM:SS
		如：
			16:34:35
		时间每个一秒变化一次

		while True:
			current_time = time.localtime()
		  print("%02d:%02d:%02d" % current_time[3:6], end="\r")
	    time.sleep(1)



