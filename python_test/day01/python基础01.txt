1、del 语句
	作用：
		用于删除变量，同时解除变量与所绑定数据之间的关系
	语法：
		del 变量名
	None值：
		作用：指定变量的数据为None, 解除变量与数据的绑定关系，但是不删除变量。
		赋值：  变量 = None
		
2、自动化内容管理和引用计数
	每个数值都会记录有几个变量绑定到了自身 - 引用计数
	当引用计数的数量为0时，数值将会被销毁（释放内存资源） - 自动化内存管理方式
	a = 1000, b=1000
	del a
	del b
	此时系统发现数值1000 被绑定的所有变量都解除了，1000没有被任何变量引用，系统就将1000销毁。
	
3、逻辑比较运算符
	1、运算符
		> : 大于
		< : 小于
		>=:大于等于
		<=:小于等于
		==:判断等于
		!=:不等于
		
		以上运算符的运算结果都是bool类型
	2、语法
		运算数1 运算符  运算数2
	3、示例
		1. 20>100  结果False
		2. 300>=300 结果 True
		3. 'a'=='b' 结果 False
		4.  'a'='b'  结果报错， 由于 = 是赋值，但左侧的操作数不是变量而是一个数值
		5. '2' > 5   结果报错，由于运算符两端的运算数的数据类型不一致，所有无法进行运算
		6. '3'>'5' 结果False, 由于使用的是 ASCII 码进行的比较 '3'的 ASCII 码是51， '5'的 ASCII 码是53
			使用ord()函数来计算assic码或 Unicode 码
		7. '35'>'5'  结果是False
		8.'张三丰'>'张无忌' 结果是 False
		9. 0<=35<=80  结果 True, 比较的是0<=35 并且35<=80
	4、注意
		1.数字与数字比较， 直接比较数字的大小即可
		2.数字与字符串的比较， 由于数据类型不一致所以无法直接比较
		3.字符串与字符串的比较
			比较每位字符的Unicode码或 ASCII 码

4、函数调用表达式（非定义）
	1、什么是函数
		函数是一段独立的功能
		ex: print('xxxxx')  : 终端中输出 xxxxx
	2、函数调用语法
		变量 = 函数名(参数列表)
		说明：
			1、函数名：就是调用一段已知的功能的名称
			2、参数列表：需要传递到函数中，进行辅助运算的数据列表（调用函数时传递的参数叫做实参，函数定义声明时的参数叫形参）
				多个实参的话中间使用','隔开即可
			3、返回值：函数执行完毕后，要返回给调用者的数值
				如果函数有返回值：可以接收也可以不接收。
				如果函数没有返回值：
					则不需要接收，如果非要接收则返回值为None
		ex:
			1、ord()
				ret = ord("张")
			2、print()
				print('xxxxx')
				
5、数值转换函数
	1、float(obj)
		将obj转换为float类型的浮点数
		如果不传递实参obj的话，则返回0.0
		如果传递实参obj的话，则返回转换结果
	2、int(x-0, base=10)
		作用： 将数字或字符串转换为整数类型 - int
		参数：
			1、x=0
				表示要转换的数据，如果不传参的话，默认为0
			2、base=10
				表示要转换的源数据的进制系统，如果不传参默认为 10， 即表示十进制。
				注意：如果指定 base 的参数值的话，源数据必须是字符串类型的。
		返回值：参数的十进制的表示结果
	3、complex(r=0.0, i=0.0)
		作用：创建一个复数
		参数：
			r: 表示复数的实部
			i: 表示复数的虚部
		返回值：创建好的复数结果
	4、bool(x)
		作用：将x转换为 bool（通过x创建一个bool的值）
		参数：x 可以为任意数据(整数/小数/字符串/...)
		返回值：返回转换后的结果
		说明：通过bool()能够返回False的情况如下：
			1、None	: 空置
			2、False	： 假值
			3、数字， 表示为0 的数字
				0
				0.0
				0j
			4、字符串，当是空字符串
				'',   "",   """"""
			5、空列表 []
			6、空元祖 ()
			7、空字典 {}
			除以上情况外，其余全部为真
	5、str(x)
		作用：将x实参转换为字符串
		参数：x 可以为任意类型
		返回值： 字符串结果

6、数值运算函数
	1、abx(x)
		作用： 将x 转换为绝对值，进行返回
		参数： x表示要转换的数值
		返回值： 整数结果（绝对值）
	2、round（number, ndigits=0）
		作用： 对number数值进行四舍五入
		参数：
			number:  要进行运算的源数值
			ndigists：保留几位数字
				取值为正数： 小数点右侧保留几位
				取值为复数： 小数点左侧保留几位
		返回值：四舍五入后的结果
	3、pow(x,y,z=None)
		作用：
			计算x**y%z，即x的y次幂模除z
			如果省略z不传的话，则表示 x**y 

7、语句 statement
	1、建议
		1、一条语句使用一行代码表示
		2、一行一句的话是不需要使用 ; 进行结尾的
		3、如果一行中包含多条语句，则每条语句必须以 ; 结尾（分隔）
	2、显式换行
		换行符： \  反斜线
		注意：换行符必须出现在一行的末尾处，用于提示解释器下一行的代码也是属于本行的内容
	3、隐式换行
		在
			元组-(), 列表 -[], 字段 -{} 所敲击的<回车>就是隐式换行， 下一行的内容也属于当前结构的内容
8、输入和输出函数
	1、输入函数 - input
		作用：从输入设备读取一个字符串，以<回车>来表示读取完毕
		语法：
			ret=input("请输入一个字符串")
			返回的ret: 表示的是用户输入的内容
	2、输出函数 - print
		作用：将字符输出到指定输出设备上
		语法：
			print(value, ...，sep="", end="\n") 可以有若干个只进行输出, 
				sep 是多个值之间以此符号分隔，
				end 是输出完毕后在结尾处增加的结束字符串, 默认为换行“\n”
		说明：print()  没有值的输出是只输出了一个"\n"换行符
		
9、分支结构
	1、程序结构
		1、顺序结构
			特点：自顶向下，，每行代码都会执行一遍
		2、分支结构（选择结构）
			特点：根据条件选择某一块的代码执行或不执行
		3、循环结构
			特点：根据条件选择某一块代码反复执行，直到某种特殊条件退出循环
	2、分支结构
		1、if 结构
			语法：
				if 条件:
					语句块
			执行流程：
				判断条件是否为真，如果为真，则执行下方的语句块，否则不执行任何操作
		2、if ... else 结构
			语法：
				if 条件:
					语句块1
				else:
					语句块2
			流程：
				如果条件为真，则执行语句块1中的代码；如果条件为假，则执行语句块2中的代码
		3、if ... elif ... else 结构
			语法：
				if 条件1:
					语句块1
				elif 条件2:
					语句块2
				elif 条件3:
					语句块3
				else:
					语句块4
				
			流程：
				1、如果条件1为真，则执行语句块1，然后跳出结构；如果条件1为假，则执行条件2
				2、如果条件2为真，则执行语句块2，然后跳出结构；结果条件2为假，则执行条件3
				3、如果条件3为真，则执行语句块3，然后跳出结构；结果条件3为假，则执行条件4
				... 
				else
			
		4、注意：
			1、if 语句的嵌套
				if结构中是可以嵌套任何程序结构的，如if中可以嵌套if, if中也可以嵌套循环
			2、if 后的真值表达式
				if后的条件尽量是bool类型的，如果不是 bool 类型的话，python解释器会将其放入进bool()中进行转换在视为条件
		5、条件表达式
			使用一个表达式来表示 if else 以及要实现的操作
			语法：表达式1 if 条件 else 表达式2              money -= 20 if money>=100 else money-5
			流程：如果条件为真则执行表达式1的代码，否则执行表达式2的内容

10、pass
	作用：
		用于填充语句块的空白
		pass 又称为 空语句块
	语法：
		pass
	场合：
		
			
				
				
				
		
		