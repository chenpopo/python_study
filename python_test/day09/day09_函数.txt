1、函数形参的定义方式
	1、位置形参
	2、星号元组形参
	3、命名关键字形参
	4、双星号字典形参
	
	1、位置形参
		语法：
			def 函数名(形参名1, 形参名2, ...):
				pass
	2、星号元组形参
		1、作用
			收集多余的位置传参
		2、语法
			def 函数名(*元组形参名)
		3、示例
			def func(*args):
				#结合此案例，args就是封装了所有参数的一个元组
				print("参数的个数为：", len(args))
				print("args", args)
		4、练习
			编写一个函数，mysum, 允许传递任意多个实参数字，该函数内返回所有的实参和
	3、命名关键字形参
		1、作用：强制要求所有的参数必须按照关键字或字典关键字传参
		2、语法：
			def 函数名(*, 命名关键字形参):
				pass
			或者
			def 函数名(*args, 命名关键字形参):
				pass
		3、示例
			def func3(*, a, b):
			    print("a=", a)
			    print("b=", b)
			func3(a = 15, b=30)
			dic = {
			    "a":14,
			    "b":28
			}
			func3(**dic)
			或者
			def func4(*args, a, b):
			    print("args:", args)
			    print("a:", a)
			    print("b:", b)
			func4(1,2,3,4, a=100,b=200)
	4、双星号字典传参
		1、作用
			收集多余的关键字参数到一个字典中
		2、语法
			def 函数名(**字典形参名)：
				pass
			注意：字典的形参名通常被命名为 args
			
		3、练习
			编写一个函数mymax,模拟內建函数max()
	5、函数的参数说明
		位置参数，缺省参数，星号元组形参，双星号字典形参 都可以混合使用
		函数的形参从左到右的顺序如下：
			位置形参
			星号元组形参
			命名关键字形参
			双星号字典形参
		示例：
			def func(a,b,*args, c, **kwargs):
				pass
				1、a,b是位置传参
				2、args是星号传参，搜集后面的参数，直到 c 的位置
				3、c必须使用关键字传参，c = ?的方式
				4、kwargs 收集多个 关键字参数到一个字典中
			所以：
				def func(100, 200, 300, 400, c="china", d="D", j="Janpan")
				1、a=100, b=200
				2、args=(300, 400)
				3、c = "china"
				4、kwargs={'d'='D', 'j'='Janpan'}
	6、函数的不定长参数
		1、作用
			可以接受任意的位置传参和关键字传参
		2、语法
			由星号元组传参 和 双星号字典形参 共同组成
			
			def func(*args, **kwargs):
				pass