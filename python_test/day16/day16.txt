day15回顾
文件
	通常用来长期存储数据
		步骤：
			1、打开文件
				f = open("文件名", 'rt')  默认是rt
			2、读写文件
				f.read()
				f.readline()
				f.readlines()
				f.write("内容")
				f.write(iterable)
			3、关闭文件
				f.close()
	模式字符串：
		读：'r'
		写：'w', 'x', 'a'
	文件的操作模式：
		文本文件操作：
			默认认为文件中全部为文字信息
			模式字符：	't'
		二进制文件操作：
			不会自动编解码
			模式字符： 'b'
	修改文件读写位置的方法：
		f.seek(偏移量, 起始位置)
		f.tell() 返回但钱读写位置
		f.flush() 清空缓存区，将缓存区的内容写入到文件中，并清空缓存区
	标准输入输出文件
		sys.stdin 标准输入
		sys.stdout 标准输出
		sys.stderr 标准错误输出

汉字编码
	两种：
		GB系列
		Unicode系列，分为2字节和4字节，目前使用非常普遍  <---------> utf-8
	    s = '你好'
	    b = s.encode('utf-8')
	    b2 = s.encode('gbk')
	    s2 = b2.decode('gbk') #解码
	编码注释：
        # -*- coding: utf-8 -*-
        或者
        # -×- coding: gbk -*-
        上面的注释在python文件顶部添加，执行的时候告诉python解释执行器文件内容使用的编码，防止出现执行出错




day16笔记
面向对象变成 Object-Oriented Programing
    相关的名词：
        类， 对象， 实例，实例方法，实例属性，初始化方法， 析构方法
    什么是对象：
        对象是指现实中的物体或实体
    面向对象
        是把一切看成对象（实例）， 用各种对象之间的关系来描述事物
    对象有什么特征：
        对象有很多属性：
            姓名，年龄，性别，肤色
        对象有很多行为（动作，动词）
            学习，吃饭，睡觉，踢球

什么是类
    拥有相同属性和行为的对象分为一组即为一个类
    类使用来描述对象的工具，用类可以创建此类的对象(实例)
    示例：
        车（类） ------> BYD 秦 京A.89898 实例
                ------> BMW X5 京B.0000 实例
        狗（类） ------> 京巴（户籍：000001） 实例
                ------> 导盲犬（户籍：000002）实例
        int（类）------> 100 实例
                ------> 301 实例

类的创建语法 class 语句
    语法：
        class 类名(继承列表)
            '类的文档字符串'
            实例方法
            类变量
            类方法(@classmethod)
            静态方法(@staticmethod)
    作用：
        创建一个类
        类用于描述对象的属性和行为
        类用于创建此类的一个或多个对象(实例)
    说明：
        继承列表可以省略
    示例见：
        class.py

构造函数
    构造函数调用表达式
        类名([创建传参列表])
    作用
        创建这个类的实例对象，并返回此实例对象的引用关系
    示例见：
        constructor.py

实例方法（instance method）
    语法：
        class 类名(继承列表):
            def 实例方法名(self, 参数列表):
                '方法的文档字符串'
                语句块
        作用：
            用于描述一个对象的行为， 让此类型的全部对象都拥有相同的行为
        说明：
            实例方法的是指是函数，是定义在类内的函数
            实例方法至少有一个形参，第一个形参绑定调用这个方法的实例，一般命名为'self'
        实例方法的调用语法：
            实例.实例方法名(调用传参)
            或
            类名.实例方法名(实例,调用传参)
    示例见：
        instance_mentod.py

实例属性(也叫实例变量) attribute
    语法：
        实例.属性名
        赋值规则
            首次为属性赋值则创建此属性
            再次为属性赋值则改变属性的绑定关系
        作用：
            记录每个对象自身的数据
    示例见：
        attribute.py

练习：
    定义一个“人” (Human)类
    class Human:
        def set_info(self, name, age, address='不详'):
            ... #此处自己实现
        def show_info(self):
            ‘此处显示此人self的信息’
            ... 此处自己实现

    h1 = Human()
    h1.set_info("小张", 20, "北京朝阳区")
    h2 = Human()
    h2.set_info("小李", 10)
    h1.show_info() #小张今年20岁，家住...
    h2.show_info() #小李今年10岁，家住不详

    答案见 human.py
删除实例属性
    语法：s
        del 对象.实例属性名
    如：
        class Dog:
            pass

        dog1 = Dog()
        dog1.color = "白色"
        print(dog1.color) #白色

        del dog1.color
        print(dog1.color) #AttributeError


初始化方法
    作用：
        对新创建的对象添加属性
    格式：
        class 类名(继承列表)：
            def __init__(self [, 形参列表]):
                语句块
        注： [] 代表其中的内容可省略
    说明：
        初始化方法名必须为 __init__ 不可改变
        初始化方法会在构造函数创建实例后自动调用，且将实例自身通过第一个参数self传入 __init__方法
        构造函数的实参将通过 __init__方法的参数列表传入到 __init__ 方法
        初始化方法内如果需要 return 语句返回，则必须返回None
    示例：
        init_method.py


析构方法
    def __del__(self):
        ...
    析构方法在对象被销毁前自动调用
    python语言不建议在对象销毁时做任何事情，因为销毁的时间难以确定
    示例：
        del_method.py


预制的示例属性
    __dict__属性
        __dict__属性绑定一个存储此实例自身属性的字典
    示例：
        class Dog:
            pass
        dog1 = Dog()
        print(dog1.__dict__)  #{}
        dog1.color = "白色"
        print(dog1.__dict__) #{"color" : "白色"}


__class__属性
    __class__ 属性绑定创建此实例的类
    作用：
        可以借助此属性来访问创建此实例的类
    示例见：
        class_attr.py

用于类的函数
    isinstance(obj, class_or_tuple) 返回这个对象obj 是否是某个类的对象
            或某些类中一个类的对象，如果是则返回True；否则返回False
    type(obj) 返回对象的类


练习：
    有两个人：
        1、姓名：张三， 年龄：30
        2、姓名：李四， 年龄：16
    行为：
        1、教别人学东西teach
        2、赚钱 work
        3、借钱borrow_from
        4、显示自己的信息 show_info
    事情描述：
        张三教李四学Python
        李四教张三学王者荣耀
        张三上班赚了1000元钱
        李四向张三接了200元
        35岁的张三有钱800元， 他学会的技能是:王者荣耀
        16对的李四有钱200元， 他学会的技能是: Python
    答案见 human_test.py



练习：
    修改《学生信息管理项目》将学生信息用字典来保存，修改为用Student 类型的对象来保存
    即：将dict 修改为 Student 类
    infos = [{"name":"xz", "age":45, "score":45}]
    修改为
    infos = [Student("xiaozhang", 20, 100), Student("xiaozhang", 20, 100)]


