1、函数 - function
	1、什么是函数
		函数是一段被预定义，并可以被反复执行的语句块
		预定义：	提前被声明好
		反复执行：可以被多次使用
		语句块：多条语句被封装到一起
	2、作用
		1、用于封装语句块，提高代码的重用性
		2、定义用户级别的功能
	3、语法
		def 函数名称(形参列表):
			语句块
		
		说明：
			1、函数名称就是功能的名称
			2、函数名的命名规则与变量名相同（标识符）
			3、函数名也是一个变量（不要轻易对其赋值）
			4、函数有自己的名字空间，在函数外部是不可以访问函数内部的变量的，在函数的内部是可以访问函数外部的变量，但不能修改此变量
			5、函数如果不需要传参的话，形参列表处可以为空
			6、语句块的部分不能为空，如果为空则填充pass进行占位
			
	4、函数的调用
		函数名(实参列表)
			实参：实际参数
	5、带参数的方法
		1、声明
			def show_name(name):
				#name: 是该方法中需要的一个参数，需要在调用是传递进来辅助函数做运算。所以在声明时不会知道该参数的值是多少，只有在调用时才会确定
				print("您的姓名是：",name)
		2、调用
			show_name("张三丰")
			
	6、函数的返回值 - return 语句
		1、什么是返回值
			函数结束调用后，要返回给函数调用者的一个值
			
		2、语法
			return [表达式]
			注： [] 可以省略不写
		3、说明
			1、return 语句或后面的表达式都可以省略，省略后相当于是return None
			2、任何函数调用后，都可以接受返回值
				如果函数有返回值，则得到对应的返回值
				如果函数没有返回值，则得到None
			3、如果返回值一个序列的话，可以在函数调用出用多个值接收，也可以用一个值接收
			
		练习：
			1、写一个函数mymax,给函数传递两个参数，返回两个参数中最大的值
			2、写一个函数 input_number，在函数提内循环输入整数，当用户输入负数时结束。将用户输入的数字以列表的形式返回，并在函数中输出最大值，最小值以及和
			3、写一个函数，print_odd，给函数传递两个参数(begin, end), 打印从begin开始到end结束（不包含end）之间的全部技术
				print_odd(1,10): 返回[1,3,5,7,9]
				print_odd(5,18): 返回[5,7,9,11,13,15,17]
			4、定义一个函数
				sum3(a,b,c):返回三个参数的和
				pow3(x): 返回x的三次方
				用以上函数计算：
					1、计算1的立方+2的立方+3的立方的和
						如： 1**3+2**3+3**3
					2、计算1+2+3的和的立方
						如： （1+2+3)**3
						
	7、函数的参数传递
		1、传递方式
			1、位置传参， 内部还包含一种特殊的序列传参
			2、关键字传参
				字典传参
		2、位置传参
			实际参数(实参)的对应关系与形式参数(形参)的对应关系是按照位置来依次对应的
			说明：
				1、形参和实参是通过位置进行传递和匹配的
				2、实参的个数必须与形参的个数相同
		3、序列传参 - 位置传参的一种
			序列传参是值在函数调用过程中，用 * 将序列拆解后按位置进行传递的传参方式
			语法：
				1、以序列作为参数的值传递给函数
					序列： 列表， 元组， 字符串
				2、在序列前用 * 表示是序列传参
			例子：
				def show_num(x,y,x):
					pass
				l1 = [1,2,3]
				show_num(*l1)  -> 通过 * 来对l1序列进行拆分
				
		4、关键字传参
			关键词传参是值传参时，按照形参的名称给形参赋值，形参和实参是按照名称进行匹配的
			例子：
				def show(a, b, c):
					pass
					
				show(a="名人", b="小樱", c="佐助")  正确
				show(c="佐助", a="名人", b="小樱")  正确
		5、字典关键字传参 - 关键字传参
			字典关键字传参是指实参为字典，将字典用 ** 拆解后在进行关键字传惨的一种方式
			1、字典的键名和形参名必须一直
			2、字典的键名必须为字符串
			3、字典的键名必须要在形参中存在
		6、函数的综合传参
			函数的传参方式在能确定形参能唯一匹配到相应的实参的情况下任意组合
			说明
				位置传参（序列传参)要在关键字传参（字典关键字传参）的左侧
				
			示例：
				def show(a,b,c):
					pass
				
				#以下调用方式
				show(100,200,300) 正确
				show(100,*[200,300])  正确
				show(*(100,200), 300)  正确
				show(*[100], 200, *(300,))  正确
				show(100, b=200, c=300)  正确
				show(300, a=200, b=100)  错误 300默认赋值给a, a=200重复赋值
				show(c=200, b=300, 100) 错误 位置传参在右侧了，所以错误
				show(100, **{'c':300, 'b':200 })  正确
			
			练习：
				写一个函数minmax(a,b,c) 三个参数，返回这三个参数中的最小值和最大值
				要求： 返回一个元组，最小值在前，最大值在后
				
				
	8、缺省参数
		声明函数的时候，可以为形参指定默认值，在调用函数的时候，有默认值的参数可以不传参
		语法：
			def 函数名(形参名1=默认值， 形参名2=默认值, ...)
				pass
		注意：
			缺省参数必须自右至左依次存在，如果一个参数有缺省值的话，那么其右侧的所有参数都必须有缺省值
		
		
		练习：
			1、编写一个函数myadd(), 此函数可以计算两个或三个数字的和
			
				def myadd(a,b,c=0)
				print(myadd(10,20)) -> 30
				print(myadd(10,20,30) -> 60
				
				def myadd(a, b, c=0):
				    return a + b + c;
				
				print(myadd(1,2))
				print(myadd(1,2,3))
			2、编写一个函数print_odd(), 此函数可以传递一个参数或两个参数，当传递一个参数的时候，代表序列的结束值。
				当传递两个参数时，第一个参数表示的是起始值，第二个参数表示的是结束值
					打印该区间的全部技术，不包括结束值